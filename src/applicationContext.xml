<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 加载jdbc资源文件 -->
	<util:properties id="jdbc"
		location="classpath:jdbc.properties"/>
	
	<!-- 定义数据源 -->
	<bean id="ds" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="#{jdbc.url}"/>
		<property name="driverClassName" value="#{jdbc.driver}"/>
		<property name="username" value="#{jdbc.user}"/>
		<property name="password" value="#{jdbc.password}"/>
		<!-- 初始化连接大小 -->  
        <property name="initialSize" value="#{jdbc.initialSize}"/>
        <property name="maxActive" value="#{jdbc.maxActive}"/>
        <property name="maxIdle" value="#{jdbc.maxIdle}"/>
        <property name="minIdle" value="#{jdbc.minIdle}"/>
        <property name="maxWait" value="#{jdbc.maxWait}"/>
	</bean>
	
	<!-- 定义sqlSessionFactory -->
	<bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
      <!-- 在创建完当前的bean后，Spring会调用
      	这个bean来扫描指定包下的XML文件。
      	在扫描的过程中，它还会验证该XML
      	文件，如果该文件中含有语法或类名
      	等的错误，会导致扫描失败，
      	Spring会报sqlSessionFactory相关的错误。 -->
      <property name="mapperLocations" 
      	value="classpath:com/supersit/gzdlxx/mapper/*.xml"/>
    </bean>
    
    <!-- 扫描DAO组件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!-- 当前的bean创建之后，Spring会调用
       	它扫描指定包下的Mapper接口，然后
       	调用MyBatis来实现这些接口。 -->
       <property name="basePackage" 
       		value="com.supersit.gzdlxx.dao" />
       	<!-- 当前bean会扫描带有指定注解的
       		Mapper接口，该注解是需要自定义的。
       		如果不配置这个条件，那么当前bean
       		会扫描所有的接口。 -->
       <!-- 
       <property name="annotationClass" 
           value="com.tarena.dao.MyBatisRepository"/>
        -->
	</bean>
	<!-- 4. 事务管理 : DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds" />
	</bean>

<!-- **********************************菜篮子数据源******************************************** -->

<!-- 定义数据源 -->
	<!-- <bean id="dsWx" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="#{jdbc.url_wx}"/>
		<property name="driverClassName" value="#{jdbc.driver}"/>
		<property name="username" value="#{jdbc.user_wx}"/>
		<property name="password" value="#{jdbc.password_wx}"/>
		初始化连接大小  
        <property name="initialSize" value="#{jdbc.initialSize}"/>
        <property name="maxActive" value="#{jdbc.maxActive}"/>
        <property name="maxIdle" value="#{jdbc.maxIdle}"/>
        <property name="minIdle" value="#{jdbc.minIdle}"/>
        <property name="maxWait" value="#{jdbc.maxWait}"/>
	</bean>
	
	定义sqlSessionFactory
	<bean id="sqlSessionFactoryWx"  class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="dsWx" />
      在创建完当前的bean后，Spring会调用
      	这个bean来扫描指定包下的XML文件。
      	在扫描的过程中，它还会验证该XML
      	文件，如果该文件中含有语法或类名
      	等的错误，会导致扫描失败，
      	Spring会报sqlSessionFactory相关的错误。
      <property name="mapperLocations" 
      	value="classpath:com/supersit/gzdlxx/mapperwx/*.xml"/>
    </bean>
    
    扫描DAO组件
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       当前的bean创建之后，Spring会调用
       	它扫描指定包下的Mapper接口，然后
       	调用MyBatis来实现这些接口。
       <property name="basePackage" 
       		value="com.supersit.gzdlxx.daowx" />
       	当前bean会扫描带有指定注解的
       		Mapper接口，该注解是需要自定义的。
       		如果不配置这个条件，那么当前bean
       		会扫描所有的接口。
	</bean>
	4. 事务管理 : DataSourceTransactionManager
	<bean id="transactionManagerWx"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dsWx" />
	</bean>
 -->
	
	<!-- SringMVC整合后的相关配置 -->
	<!-- 开启IOC注解扫描 -->
	<context:component-scan  base-package="com.supersit.gzdlxx" />
	
	<!-- 开启MVC注解扫描 -->
	<mvc:annotation-driven /> 
	
	<!-- responseBody编码处理 -->
	<mvc:annotation-driven>
     <mvc:message-converters register-defaults="true">
    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
      <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
    </bean>
    </mvc:message-converters>
    </mvc:annotation-driven>
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.supersit.gzdlxx.interceptor.loginInterceptor">
				<property name="excludedUrls">
					<list>
						<value>/toLogin.do</value>
						<value>/login.do</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	
</beans>